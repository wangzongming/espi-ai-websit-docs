import{_ as e,r as p,c as t,b as l,e as s,d as i,w as c,a as n,o}from"./app-C4qcx3IG.js";const r={},u=n('<h1 id="server" tabindex="-1"><a class="header-anchor" href="#server"><span>Server</span></a></h1><p>The server is used to handle communication and data processing with <code>IAT/ASR</code>, <code>LLM/RAG</code>, and <code>TTS</code> services, and send the final audio results to the client so the client can directly play the audio data.</p><p>The core of the server is written in <code>Nodejs</code>. It provides plugin development extensions for <code>Nodejs</code> programming language and more.</p><p>The server mainly offers various configuration options that you need to modify.</p><h2 id="installation-and-environment" tabindex="-1"><a class="header-anchor" href="#installation-and-environment"><span>Installation and Environment</span></a></h2>',5),d=n(`<h2 id="basic-code" tabindex="-1"><a class="header-anchor" href="#basic-code"><span>Basic Code</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> espAi <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;esp-ai&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span>
<span class="line"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span> </span>
<span class="line">    <span class="token literal-property property">api_key</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// Xunfei: https://console.xfyun.cn/services/iat. Open the URL and copy the three fields in the top right corner.</span></span>
<span class="line">        <span class="token literal-property property">xun_fei</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token literal-property property">appid</span><span class="token operator">:</span> <span class="token string">&quot;5200d300&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">apiSecret</span><span class="token operator">:</span> <span class="token string">&quot;xxx&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">apiKey</span><span class="token operator">:</span> <span class="token string">&quot;xx&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">llm</span><span class="token operator">:</span> <span class="token string">&quot;v4.0&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span> </span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">espAi</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="configuration-options" tabindex="-1"><a class="header-anchor" href="#configuration-options"><span>Configuration Options</span></a></h2><p>Besides the required <code>api_key</code>, there are additional optional settings.</p><h3 id="api-key" tabindex="-1"><a class="header-anchor" href="#api-key"><span>api_key</span></a></h3><ul><li>Description: Different service providers require their own <code>key</code>, and each plugin also needs its corresponding <code>key</code>. The <code>key</code> configuration for each service provider or plugin is not exactly the same, please refer to the documentation for specifics.</li></ul><p>If <code>iat_server</code>, <code>tts_server</code>, or <code>llm_server</code> are configured, the corresponding configuration must appear below. For example, if <code>tts_server: &quot;xun_fei&quot;</code> is configured, there must be a Xunfei configuration below.</p><ul><li>Default: -</li><li>Required: Yes</li><li>Usage Example</li></ul><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span> </span>
<span class="line">    api_key<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">       <span class="token doc-comment comment">/** [内置插件]</span>
<span class="line">        * 讯飞：https://console.xfyun.cn/services/iat  。打开网址后，右上角三个字段复制进来即可。</span>
<span class="line">       */</span></span>
<span class="line">        xun_fei<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            appid<span class="token operator">:</span> <span class="token string">&quot;5200d300&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            apiSecret<span class="token operator">:</span> <span class="token string">&quot;xxx&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            apiKey<span class="token operator">:</span> <span class="token string">&quot;xx&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            llm<span class="token operator">:</span> <span class="token string">&quot;v4.0&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token doc-comment comment">/** [内置插件]</span>
<span class="line">         * 阿里积灵（千问等）： https://dashscope.console.aliyun.com/apiKey</span>
<span class="line">         * 积灵主要是提供llm（推荐使用这个llm服务）</span>
<span class="line">        */</span> </span>
<span class="line">        dashscope<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            apiKey<span class="token operator">:</span> <span class="token string">&quot;sk-xx&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token comment">// LLM 版本</span></span>
<span class="line">            llm<span class="token operator">:</span> <span class="token string">&quot;qwen-turbo&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">        <span class="token doc-comment comment">/** [内置插件]</span>
<span class="line">         * 火山引擎（豆包等）：https://console.volcengine.com/speech/service/8?AppID=6359932705</span>
<span class="line">         */</span> </span>
<span class="line">        volcengine<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 火山引擎的TTS与LLM使用不同的key，所以需要分别配置</span></span>
<span class="line">            tts<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">// 服务接口认证信息</span></span>
<span class="line">                appid<span class="token operator">:</span> <span class="token string">&quot;xxx&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                accessToken<span class="token operator">:</span> <span class="token string">&quot;xxx&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">            <span class="token comment">// 暂不支持 llm</span></span>
<span class="line">            llm<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">// 获取地址：https://console.volcengine.com/ark/region:ark+cn-beijing/endpoint?current=1&amp;pageSize=10</span></span>
<span class="line">                model<span class="token operator">:</span> <span class="token string">&quot;ep-xxx&quot;</span><span class="token punctuation">,</span><span class="token comment">// 每个模型都有一个id</span></span>
<span class="line">                <span class="token comment">// 获取地址：https://console.volcengine.com/ark/region:ark+cn-beijing/apiKey</span></span>
<span class="line">                apiKey<span class="token operator">:</span> <span class="token string">&quot;32dacfe4xxx&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">        <span class="token doc-comment comment">/** [第三方插件]</span>
<span class="line">         * 海豚TTS, 可以不用配置 token, 每天都有免费额度</span>
<span class="line">         * 插件文档地址： https://www.npmjs.com/package/esp-ai-plugin-tts-ttson</span>
<span class="line">         * 海豚配音：https://www.ttson.cn/</span>
<span class="line">        */</span> </span>
<span class="line">        <span class="token string-property property">&quot;esp-ai-plugin-tts-ttson&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            token<span class="token operator">:</span> <span class="token string">&quot;&quot;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span> </span>
<span class="line">        <span class="token doc-comment comment">/**  [第三方插件]</span>
<span class="line">         * 通过onehub支持绝大多数LLM模型</span>
<span class="line">         * 插件文档地址： https://www.npmjs.com/package/esp-ai-plugin-llm-onehub </span>
<span class="line">         */</span>  </span>
<span class="line">        <span class="token string-property property">&quot;esp-ai-plugin-llm-onehub&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            apiKey<span class="token operator">:</span> <span class="token string">&quot;sk-xxx&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            llm<span class="token operator">:</span> <span class="token string">&quot;gpt-3.5-turbo&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            api_server<span class="token operator">:</span> <span class="token string">&quot;https://api.xn--5kv132d.com/v1/chat/completions&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span> </span>
<span class="line">        <span class="token comment">// 其他自定义插件，插件名称为对象名字，如[custom_plugin]</span></span>
<span class="line">        <span class="token comment">// custom_plugin: {</span></span>
<span class="line">        <span class="token comment">//     [key: string]: any;</span></span>
<span class="line">        <span class="token comment">// }</span></span>
<span class="line">    <span class="token punctuation">}</span> </span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="iat-server" tabindex="-1"><a class="header-anchor" href="#iat-server"><span>iat_server</span></a></h3><ul><li><p>Description: Speech recognition service, the framework currently has Xunfei&#39;s service <code>xun_fei</code> built-in. For other service providers or local services, please download the required plugins from the <a href="/en/plugs.html">Plugin Market</a> or write your own plugins.</p></li><li><p>Default: xun_fei</p></li><li><p>Required: No</p></li><li><p>Usage Example</p></li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span> </span>
<span class="line">    <span class="token literal-property property">iat_server</span><span class="token operator">:</span> <span class="token string">&quot;xun_fei&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tts-server" tabindex="-1"><a class="header-anchor" href="#tts-server"><span>tts_server</span></a></h3><ul><li><p>Description: TTS service, the framework currently has Xunfei&#39;s service <code>xun_fei</code> built-in. For other service providers or local services, please download the required plugins from the Plugin Market or write your own plugins.</p></li><li><p>Default: xun_fei</p></li><li><p>Required: No</p></li><li><p>Usage Example</p></li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span> </span>
<span class="line">    <span class="token literal-property property">tts_server</span><span class="token operator">:</span> <span class="token string">&quot;xun_fei&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="llm-server" tabindex="-1"><a class="header-anchor" href="#llm-server"><span>llm_server</span></a></h3><ul><li><p>Description: LLM/RAG service, the framework currently has Xunfei&#39;s service <code>xun_fei</code> built-in. For other service providers or local services, please download the required plugins from the Plugin Market or write your own plugins.</p></li><li><p>Default: xun_fei</p></li><li><p>Required: No</p></li><li><p>Usage Example</p></li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span> </span>
<span class="line">    <span class="token literal-property property">llm_server</span><span class="token operator">:</span> <span class="token string">&quot;xun_fei&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="devlog" tabindex="-1"><a class="header-anchor" href="#devlog"><span>devLog</span></a></h3><ul><li>Description: Log output mode: 0 No output (online mode), 1 Normal output, 2 Detailed output</li><li>Default: 1</li><li>Required: No</li><li>Usage Example</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span> </span>
<span class="line">    <span class="token literal-property property">devLog</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="port" tabindex="-1"><a class="header-anchor" href="#port"><span>port</span></a></h3><ul><li>Description: Server port</li><li>Default: 8080</li><li>Required: No</li><li>Usage Example</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span> </span>
<span class="line">    <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="intention" tabindex="-1"><a class="header-anchor" href="#intention"><span>intention</span></a></h3><ul><li>Description: User intention table. After waking up Xiao Ming, you can give the following commands. Setting 3 to 5 keywords is optimal. This function is essential when creating a home assistant.</li></ul><p>Built-in instruction <strong>play_music</strong> 、<strong>sleep</strong></p><p>When the intent service needs to be requested, it can be written as an asynchronous function, and if it returns anything other than &#39;false&#39;, the match is successful. The following side of the music plays.</p><ul><li>Default: -</li><li>Required: No</li><li>Usage Example</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span> </span>
<span class="line">    <span class="token literal-property property">intention</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// Keywords</span></span>
<span class="line">            <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;帮我开灯&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;开灯&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;打开灯&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token comment">// Instruction sent to the client</span></span>
<span class="line">            <span class="token literal-property property">instruct</span><span class="token operator">:</span> <span class="token string">&quot;device_open_001&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;开啦！还有什么需要帮助的吗？&quot;</span><span class="token punctuation">,</span> </span>
<span class="line">            <span class="token comment">// Additional parameters, write all data as string type, and avoid placing large data here</span></span>
<span class="line">            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">&quot;ak=123456&quot;</span><span class="token punctuation">;</span> </span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// Keywords</span></span>
<span class="line">            <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;帮我关灯&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;关灯&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;关闭灯&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token comment">// Instruction sent to the client</span></span>
<span class="line">            <span class="token literal-property property">instruct</span><span class="token operator">:</span> <span class="token string">&quot;device_close_001&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;关啦！还有什么需要帮助的吗？&quot;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token punctuation">{</span></span>
<span class="line">            <span class="token doc-comment comment">/**</span>
<span class="line">             * regex match</span>
<span class="line">             * Such as: Play music last stubborn</span>
<span class="line">             * </span>
<span class="line">             * The matching string is returned as a successful match</span>
<span class="line">            */</span></span>
<span class="line">            <span class="token function-variable function">key</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">const</span> regex <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(播放音乐)(.*)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token keyword">const</span> match <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>regex<span class="token punctuation">)</span><span class="token punctuation">;</span> </span>
<span class="line">                <span class="token keyword">if</span> <span class="token punctuation">(</span>match<span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">                    <span class="token keyword">const</span> songName <span class="token operator">=</span> match<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span> </span>
<span class="line">                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;name:&quot;</span><span class="token punctuation">,</span> songName<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                    <span class="token keyword">return</span> songName<span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token comment">// 向客户端发送的指令</span></span>
<span class="line">            <span class="token literal-property property">instruct</span><span class="token operator">:</span> <span class="token string">&quot;__play_music__&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;好的！&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token comment">// 用于返回音乐地址的服务，\`esp-ai\` 目前不提供音乐服务</span></span>
<span class="line">            <span class="token comment">// name 是歌曲名称</span></span>
<span class="line">            <span class="token function-variable function">music_server</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token string">&quot;http://m10.music.126.net/20240723180659/13eabc0c9291dab9a836120bf3f609ea/ymusic/5353/0f0f/0358/d99739615f8e5153d77042092f07fd77.mp3&quot;</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// Keywords</span></span>
<span class="line">            <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;退下吧&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;退下&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token comment">// Built-in sleep command</span></span>
<span class="line">            <span class="token literal-property property">instruct</span><span class="token operator">:</span> <span class="token string">&quot;__sleep__&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;我先退下了，有需要再叫我。&quot;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="f-reply" tabindex="-1"><a class="header-anchor" href="#f-reply"><span>f_reply</span></a></h3><ul><li>Description: Reply after being woken up</li><li>Default: 小明在的</li><li>Required: No</li><li>Usage Example</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span> </span>
<span class="line">    <span class="token literal-property property">f_reply</span><span class="token operator">:</span> <span class="token string">&quot;有事请吩咐&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="vad-eos" tabindex="-1"><a class="header-anchor" href="#vad-eos"><span>vad_eos</span></a></h3><ul><li>默认: Voice recognition silence time, in milliseconds, default 2500</li><li>必填: No</li><li>使用案例</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span> </span>
<span class="line">    <span class="token literal-property property">vad_eos</span><span class="token operator">:</span> <span class="token number">5000</span><span class="token punctuation">,</span> <span class="token comment">// After 5 seconds no speech is heard end session</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="llm-params-set" tabindex="-1"><a class="header-anchor" href="#llm-params-set"><span>llm_params_set</span></a></h3><ul><li>Description: LLM parameter customization, you can set temperature, etc.</li><li>Default: -</li><li>Required: No</li><li>Usage Example</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span> </span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * LLM parameter control, you can set temperature, etc.</span>
<span class="line">     * The parameter format and attribute names required by different services are different, according to the actual documentation of the plugin or service.</span>
<span class="line">    */</span></span>
<span class="line">    <span class="token function-variable function">llm_params_set</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> </span>
<span class="line">        <span class="token doc-comment comment">/** Xunfei temperature setting ... **/</span></span>
<span class="line">        params<span class="token punctuation">.</span>parameter<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>temperature <span class="token operator">=</span> <span class="token number">0.4</span><span class="token punctuation">;</span></span>
<span class="line">        params<span class="token punctuation">.</span>parameter<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>max_tokens <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span> </span>
<span class="line">        <span class="token comment">// Must return the parameters after modification</span></span>
<span class="line">        <span class="token keyword">return</span> params<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tts-params-set" tabindex="-1"><a class="header-anchor" href="#tts-params-set"><span>tts_params_set</span></a></h3><ul><li>Description: TTS parameter customization, you can set speaker, volume, speech rate, etc.</li><li>Default: -</li><li>Required: No</li><li>Usage Example</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span> </span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * TTS parameter control, you can set speaker, volume, speech rate, etc.</span>
<span class="line">     * The parameter format and attribute names required by different services are different, configure according to the following attributes</span>
<span class="line">    */</span></span>
<span class="line">    <span class="token function-variable function">tts_params_set</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> </span>
<span class="line">        <span class="token doc-comment comment">/** Xunfei **/</span></span>
<span class="line">        <span class="token comment">// Speaker list: https://help.aliyun.com/zh/dashscope/developer-reference/model-list-old-version?spm=a2c4g.11186623.0.0.5fbe490eBdtzX0</span></span>
<span class="line">        params<span class="token punctuation">.</span>vcn <span class="token operator">=</span> <span class="token string">&quot;aisbabyxu&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token doc-comment comment">/** Volcano Engine **/</span></span>
<span class="line">        <span class="token comment">// Speaker list: https://www.volcengine.com/docs/6561/97465</span></span>
<span class="line">        <span class="token comment">// params.voice_type = &quot;BV051_streaming&quot; </span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Must return the parameters after modification</span></span>
<span class="line">        <span class="token keyword">return</span> params<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ondeviceconnect" tabindex="-1"><a class="header-anchor" href="#ondeviceconnect"><span>onDeviceConnect</span></a></h3><ul><li>Description: Callback for new device connection to the service</li><li>Default: -</li><li>Required: No</li><li>Usage Example</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>  </span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * Callback for new device connection to the service</span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">device_id</span> Device ID</span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">client_version</span> Client version</span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>WebSocket<span class="token punctuation">}</span></span> <span class="token parameter">ws</span> Connection handle, can use ws.send() to send data</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token function-variable function">onDeviceConnect</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> device_id<span class="token punctuation">,</span> ws<span class="token punctuation">,</span> client_version <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// Do something...</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oniatcb" tabindex="-1"><a class="header-anchor" href="#oniatcb"><span>onIATcb</span></a></h3><ul><li>Description: Callback during the speech recognition process</li><li>Default: -</li><li>Required: No</li><li>Usage Example</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span> </span>
<span class="line">    <span class="token doc-comment comment">/** </span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">device_id</span> Device ID</span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">text</span> Recognized text </span>
<span class="line">    */</span></span>
<span class="line">   <span class="token function">onIATcb</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> device_id<span class="token punctuation">,</span> text <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oniatendcb" tabindex="-1"><a class="header-anchor" href="#oniatendcb"><span>onIATEndcb</span></a></h3><ul><li>Description: Callback after speech recognition is complete, you can send the last frame to the speech recognition server here</li><li>Default: -</li><li>Required: No</li><li>Usage Example</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>   </span>
<span class="line">    <span class="token doc-comment comment">/** </span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">device_id</span> Device ID</span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">text</span> Recognized text </span>
<span class="line">    */</span></span>
<span class="line">    <span class="token function-variable function">onIATEndcb</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> device_id<span class="token punctuation">,</span> text <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onllmcb" tabindex="-1"><a class="header-anchor" href="#onllmcb"><span>onLLMcb</span></a></h3><ul><li>Description: LLM service response callback</li><li>Default: -</li><li>Required: No</li><li>Usage Example</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span> </span>
<span class="line">    <span class="token doc-comment comment">/** </span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">device_id</span> Device ID</span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">text</span> Text segment inferred by the large language model </span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>boolean<span class="token punctuation">}</span></span> <span class="token parameter">is_over</span> Whether the answer is complete </span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>object<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">llm_historys</span> Conversation history </span>
<span class="line">    */</span></span>
<span class="line">    <span class="token function-variable function">onLLMcb</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> device_id<span class="token punctuation">,</span> text<span class="token punctuation">,</span> is_over<span class="token punctuation">,</span> llm_historys <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onttscb" tabindex="-1"><a class="header-anchor" href="#onttscb"><span>onTTScb</span></a></h3><ul><li>说明： tts 回调</li><li>默认: -</li><li>必填: 否</li><li>使用案例</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span> </span>
<span class="line">    <span class="token doc-comment comment">/** </span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">device_id</span> 设备id</span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Boolean<span class="token punctuation">}</span></span> <span class="token parameter">is_over</span>  是否完毕</span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Buffer<span class="token punctuation">}</span></span> <span class="token parameter">audio</span>    音频流 </span>
<span class="line">    */</span></span>
<span class="line">    <span class="token function-variable function">onTTScb</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>  <span class="token literal-property property">device_id</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">is_over</span><span class="token operator">:</span> boolean<span class="token punctuation">,</span> <span class="token literal-property property">audio</span><span class="token operator">:</span> Buffer <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="plugins" tabindex="-1"><a class="header-anchor" href="#plugins"><span>plugins</span></a></h3><ul><li><p>Description: Plugins, the usage methods for <code>LLM</code>, <code>TTS</code>, and <code>IAT</code> plugins are the same. First, you need a plugin, whether it is installed from the <a href="/en/plugs.html">Plugin Market</a> or self-written: <a href="/en/plugs-develop.html">Plugin DevelopmentDocumentation</a> The general usage process is to install the plugin using the command <code>npm i xxx</code>, then change the service configuration <code>xxx_server: &#39;xxx&#39;</code>, and then introduce it in the plugin.</p></li><li><p>Default: -</p></li><li><p>Required: No</p></li><li><p>Usage Example</p></li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>  </span>
<span class="line">    <span class="token comment">// Use esp-ai-plugin-iat-example to provide speech recognition service</span></span>
<span class="line">    <span class="token literal-property property">iat_server</span><span class="token operator">:</span> <span class="token string">&quot;esp-ai-plugin-iat-example&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// Use esp-ai-plugin-tts-ttson to provide tts service</span></span>
<span class="line">    <span class="token literal-property property">tts_server</span><span class="token operator">:</span> <span class="token string">&quot;esp-ai-plugin-tts-ttson&quot;</span><span class="token punctuation">,</span> <span class="token comment">// Dolphin dubbing plugin</span></span>
<span class="line">    <span class="token comment">// Use esp-ai-plugin-llm-example to provide llm service</span></span>
<span class="line">    <span class="token literal-property property">llm_server</span><span class="token operator">:</span> <span class="token string">&quot;esp-ai-plugin-llm-example&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// Introduce plugins</span></span>
<span class="line">    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span> </span>
<span class="line">        <span class="token comment">// Install in the project: npm i esp-ai-plugin-iat-example</span></span>
<span class="line">        <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;esp-ai-plugin-iat-example&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> </span>
<span class="line">        <span class="token comment">// Install in the project: npm i esp-ai-plugin-tts-ttson</span></span>
<span class="line">        <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;esp-ai-plugin-tts-ttson&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> </span>
<span class="line">        <span class="token comment">// Install in the project: npm i esp-ai-plugin-llm-example</span></span>
<span class="line">        <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;esp-ai-plugin-llm-example&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> </span>
<span class="line">    <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,60);function v(m,k){const a=p("RouteLink");return o(),t("div",null,[u,l("p",null,[s("For detailed information, please refer directly to the Quick Start section: "),i(a,{to:"/en/start.html#server"},{default:c(()=>[s("Server Installation")]),_:1}),s(".")]),d])}const g=e(r,[["render",v],["__file","server.html.vue"]]),h=JSON.parse('{"path":"/en/server.html","title":"Server","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Installation and Environment","slug":"installation-and-environment","link":"#installation-and-environment","children":[]},{"level":2,"title":"Basic Code","slug":"basic-code","link":"#basic-code","children":[]},{"level":2,"title":"Configuration Options","slug":"configuration-options","link":"#configuration-options","children":[{"level":3,"title":"api_key","slug":"api-key","link":"#api-key","children":[]},{"level":3,"title":"iat_server","slug":"iat-server","link":"#iat-server","children":[]},{"level":3,"title":"tts_server","slug":"tts-server","link":"#tts-server","children":[]},{"level":3,"title":"llm_server","slug":"llm-server","link":"#llm-server","children":[]},{"level":3,"title":"devLog","slug":"devlog","link":"#devlog","children":[]},{"level":3,"title":"port","slug":"port","link":"#port","children":[]},{"level":3,"title":"intention","slug":"intention","link":"#intention","children":[]},{"level":3,"title":"f_reply","slug":"f-reply","link":"#f-reply","children":[]},{"level":3,"title":"vad_eos","slug":"vad-eos","link":"#vad-eos","children":[]},{"level":3,"title":"llm_params_set","slug":"llm-params-set","link":"#llm-params-set","children":[]},{"level":3,"title":"tts_params_set","slug":"tts-params-set","link":"#tts-params-set","children":[]},{"level":3,"title":"onDeviceConnect","slug":"ondeviceconnect","link":"#ondeviceconnect","children":[]},{"level":3,"title":"onIATcb","slug":"oniatcb","link":"#oniatcb","children":[]},{"level":3,"title":"onIATEndcb","slug":"oniatendcb","link":"#oniatendcb","children":[]},{"level":3,"title":"onLLMcb","slug":"onllmcb","link":"#onllmcb","children":[]},{"level":3,"title":"onTTScb","slug":"onttscb","link":"#onttscb","children":[]},{"level":3,"title":"plugins","slug":"plugins","link":"#plugins","children":[]}]}],"git":{"updatedTime":1722236477000,"contributors":[{"name":"wangzongming","email":"wangzm@bjzxkj.com","commits":4}]},"filePathRelative":"en/server.md"}');export{g as comp,h as data};
