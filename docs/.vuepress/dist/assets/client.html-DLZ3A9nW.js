import{_ as n,c as s,o as a,a as e}from"./app-BskzONf5.js";const t={},p=e(`<h1 id="client" tabindex="-1"><a class="header-anchor" href="#client"><span>Client</span></a></h1><p>This document will help you dive into the hardware part of the development, including explanations of various <code>api</code> provided by the <code>ESP-AI</code> hardware library.</p><h2 id="basic-code" tabindex="-1"><a class="header-anchor" href="#basic-code"><span>Basic Code</span></a></h2><p>For the basic code, refer directly to the quick start section: <a href="start.html#client">Client Code</a>.</p><h2 id="pin-connections" tabindex="-1"><a class="header-anchor" href="#pin-connections"><span>Pin Connections</span></a></h2><p>For the pin connections, refer directly to the quick start section: <a href="start.html#hardware-wiring-esp32-s3">Pin Connections</a>.</p><h2 id="api" tabindex="-1"><a class="header-anchor" href="#api"><span>API</span></a></h2><p>In the basic code, we used the two most fundamental <code>api</code>, <code>esp_ai.begin</code> and <code>esp_ai.loop</code>, which must be called. Below, all available <code>api</code> are listed, which can be used as needed.</p><h3 id="begin" tabindex="-1"><a class="header-anchor" href="#begin"><span>.begin</span></a></h3><p>This method should be called in <code>setup()</code> to initialize hardware pins before using any other methods.</p><h4 id="example-code" tabindex="-1"><a class="header-anchor" href="#example-code"><span>Example Code</span></a></h4><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre class="language-c"><code><span class="line">ESP_AI esp_ai<span class="token punctuation">;</span>  </span>
<span class="line"><span class="token comment">// [Required] Debug mode, outputs more information</span></span>
<span class="line">bool debug <span class="token operator">=</span> true<span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// [Required] WiFi configuration: { WiFi SSID, WiFi password } Note: Use double quotes!</span></span>
<span class="line">ESP_AI_wifi_config wifi_config <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;oldwang&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;oldwang520&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// [Required] Server configuration: { Server IP, Server port, params }</span></span>
<span class="line">ESP_AI_server_config server_config <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;192.168.1.5&quot;</span><span class="token punctuation">,</span> <span class="token number">8080</span><span class="token punctuation">,</span> <span class="token string">&quot;api-key=your_api_key&amp;p2=test&quot;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// [Required] Offline wake-up scheme: { Scheme, Recognition threshold }, &quot;edge_impulse&quot; | &quot;diy&quot;, use \`esp_ai.wakeUp()\` to wake up if &quot;diy&quot; is chosen</span></span>
<span class="line">ESP_AI_wake_up_config wake_up_config <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;edge_impulse&quot;</span><span class="token punctuation">,</span> <span class="token number">0.7</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// [Optional] Microphone pin configuration: { bck_io_num, ws_io_num, data_in_num }</span></span>
<span class="line">ESP_AI_i2s_config_mic i2s_config_mic <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// [Optional] Speaker pin configuration: { bck_io_num, ws_io_num, data_in_num, Sampling rate }</span></span>
<span class="line">ESP_AI_i2s_config_speaker i2s_config_speaker <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">16000</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// [Optional] Volume adjustment configuration: { Input pin, Maximum input value (1024|4096), Default volume (0-1) }</span></span>
<span class="line">ESP_AI_volume_config volume_config <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">4096</span><span class="token punctuation">,</span> <span class="token number">0.5</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">115200</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// Start running ESP-AI</span></span>
<span class="line">  esp_ai<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">{</span> i2s_config_mic<span class="token punctuation">,</span> i2s_config_speaker<span class="token punctuation">,</span> wifi_config<span class="token punctuation">,</span> server_config<span class="token punctuation">,</span> wake_up_config<span class="token punctuation">,</span> volume_config<span class="token punctuation">,</span> debug <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameter-description" tabindex="-1"><a class="header-anchor" href="#parameter-description"><span>Parameter Description</span></a></h4><table><thead><tr><th>Parameter Name</th><th>Required</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>debug</td><td>✔️</td><td>bool</td><td>See example notes</td></tr><tr><td>wifi_config</td><td>✔️</td><td>ESP_AI_wifi_config</td><td>See example notes</td></tr><tr><td>server_config</td><td>✔️</td><td>ESP_AI_server_config</td><td>See example notes</td></tr><tr><td>wake_up_config</td><td>✔️</td><td>ESP_AI_wake_up_config</td><td>See example notes</td></tr><tr><td>i2s_config_mic</td><td></td><td>ESP_AI_i2s_config_mic</td><td>See example notes</td></tr><tr><td>i2s_config_speaker</td><td></td><td>ESP_AI_i2s_config_speaker</td><td>See example notes</td></tr><tr><td>volume_config</td><td></td><td>ESP_AI_volume_config</td><td>See example notes</td></tr></tbody></table><h3 id="loop" tabindex="-1"><a class="header-anchor" href="#loop"><span>.loop</span></a></h3><p>This should be called in the <code>loop()</code> to handle the internal logic of the hardware. Make sure to place it at the top of <code>loop()</code>.</p><h4 id="example-code-1" tabindex="-1"><a class="header-anchor" href="#example-code-1"><span>Example Code</span></a></h4><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre class="language-c"><code><span class="line">ESP_AI esp_ai<span class="token punctuation">;</span>  </span>
<span class="line"></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  esp_ai<span class="token punctuation">.</span><span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameter-description-1" tabindex="-1"><a class="header-anchor" href="#parameter-description-1"><span>Parameter Description</span></a></h4><p>None</p><h3 id="wifiisconnected" tabindex="-1"><a class="header-anchor" href="#wifiisconnected"><span>.wifiIsConnected</span></a></h3><p>Returns whether WiFi is connected.</p><h4 id="example-code-2" tabindex="-1"><a class="header-anchor" href="#example-code-2"><span>Example Code</span></a></h4><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre class="language-c"><code><span class="line">ESP_AI esp_ai<span class="token punctuation">;</span>  </span>
<span class="line"><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  esp_ai<span class="token punctuation">.</span><span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// Returns true after connecting to WiFi, must be placed after esp_ai.loop()</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>esp_ai<span class="token punctuation">.</span><span class="token function">wifiIsConnected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameter-description-2" tabindex="-1"><a class="header-anchor" href="#parameter-description-2"><span>Parameter Description</span></a></h4><p>None</p><h3 id="localip" tabindex="-1"><a class="header-anchor" href="#localip"><span>.localIP</span></a></h3><p>Returns the local IP of the development board after connecting to WiFi.</p><h4 id="example-code-3" tabindex="-1"><a class="header-anchor" href="#example-code-3"><span>Example Code</span></a></h4><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre class="language-c"><code><span class="line">Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>esp_ai<span class="token punctuation">.</span><span class="token function">localIP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="parameter-description-3" tabindex="-1"><a class="header-anchor" href="#parameter-description-3"><span>Parameter Description</span></a></h4><p>None</p><h3 id="wakeup" tabindex="-1"><a class="header-anchor" href="#wakeup"><span>.wakeUp</span></a></h3><p>Calling this method directly wakes up <code>Xiao Ming</code> and enters the conversation process. This is used when using a physical button or a third-party voice wake-up board (e.g., Tianwen).</p><h4 id="example-code-4" tabindex="-1"><a class="header-anchor" href="#example-code-4"><span>Example Code</span></a></h4><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre class="language-c"><code><span class="line">esp_ai<span class="token punctuation">.</span><span class="token function">wakeUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="parameter-description-4" tabindex="-1"><a class="header-anchor" href="#parameter-description-4"><span>Parameter Description</span></a></h4><p>None</p><h3 id="setvolume" tabindex="-1"><a class="header-anchor" href="#setvolume"><span>.setVolume</span></a></h3><h4 id="example-code-5" tabindex="-1"><a class="header-anchor" href="#example-code-5"><span>Example Code</span></a></h4><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre class="language-c"><code><span class="line"><span class="token comment">// Set volume 0-100</span></span>
<span class="line">esp_ai<span class="token punctuation">.</span><span class="token function">setVolume</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameter-description-5" tabindex="-1"><a class="header-anchor" href="#parameter-description-5"><span>Parameter Description</span></a></h4><ul><li>Type: int</li><li>Range: 0-100</li></ul><h3 id="onevent" tabindex="-1"><a class="header-anchor" href="#onevent"><span>.onEvent</span></a></h3><p>Callback for receiving user control commands, such as turning the light on or off. You need to perform the corresponding operations within this callback.</p><h4 id="example-code-6" tabindex="-1"><a class="header-anchor" href="#example-code-6"><span>Example Code</span></a></h4><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre class="language-c"><code><span class="line"><span class="token keyword">void</span> <span class="token function">on_command</span><span class="token punctuation">(</span>String command_id<span class="token punctuation">,</span> String data<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  Serial<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\nReceived command: %s -- %s\\n&quot;</span><span class="token punctuation">,</span> command_id<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Control the light for demonstration</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>command_id <span class="token operator">==</span> <span class="token string">&quot;device_open_001&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Turn on the light&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>led_pin<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>command_id <span class="token operator">==</span> <span class="token string">&quot;device_close_001&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Turn off the light&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>led_pin<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">115200</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span>
<span class="line">  esp_ai<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// User command listener</span></span>
<span class="line">  esp_ai<span class="token punctuation">.</span><span class="token function">onEvent</span><span class="token punctuation">(</span>on_command<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameter-description-6" tabindex="-1"><a class="header-anchor" href="#parameter-description-6"><span>Parameter Description</span></a></h4><p>None</p>`,49),i=[p];function c(o,l){return a(),s("div",null,i)}const d=n(t,[["render",c],["__file","client.html.vue"]]),r=JSON.parse('{"path":"/en/client.html","title":"Client","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Basic Code","slug":"basic-code","link":"#basic-code","children":[]},{"level":2,"title":"Pin Connections","slug":"pin-connections","link":"#pin-connections","children":[]},{"level":2,"title":"API","slug":"api","link":"#api","children":[{"level":3,"title":".begin","slug":"begin","link":"#begin","children":[]},{"level":3,"title":".loop","slug":"loop","link":"#loop","children":[]},{"level":3,"title":".wifiIsConnected","slug":"wifiisconnected","link":"#wifiisconnected","children":[]},{"level":3,"title":".localIP","slug":"localip","link":"#localip","children":[]},{"level":3,"title":".wakeUp","slug":"wakeup","link":"#wakeup","children":[]},{"level":3,"title":".setVolume","slug":"setvolume","link":"#setvolume","children":[]},{"level":3,"title":".onEvent","slug":"onevent","link":"#onevent","children":[]}]}],"git":{"updatedTime":1722315446000,"contributors":[{"name":"wangzongming","email":"wangzm@bjzxkj.com","commits":4}]},"filePathRelative":"en/client.md"}');export{d as comp,r as data};
