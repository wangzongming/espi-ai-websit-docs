import{_ as n,c as s,o as a,a as e}from"./app-ABaH--xM.js";const p={},t=e(`<h1 id="客户端" tabindex="-1"><a class="header-anchor" href="#客户端"><span>客户端</span></a></h1><p>本文档将会帮助你深入硬件部分的开发，包括<code>ESP-AI</code>硬件库提供的各种<code>api</code>讲解。</p><h2 id="基本代码" tabindex="-1"><a class="header-anchor" href="#基本代码"><span>基本代码</span></a></h2><p>这里不在赘述，直接看快速开始中的：<a href="start.html#客户端">客户端代码</a></p><h2 id="引脚接线" tabindex="-1"><a class="header-anchor" href="#引脚接线"><span>引脚接线</span></a></h2><p>这里不在赘述，直接看快速开始中的：<a href="start.html#硬件接线-esp32-s3">引脚接线</a></p><h2 id="api" tabindex="-1"><a class="header-anchor" href="#api"><span>API</span></a></h2><p>在基本代码中我们用到了<code>esp_ai.begin</code>、<code>esp_ai.loop</code>这两个最基本的<code>api</code>是必须调用的。下面将会列举出全部的<code>api</code>，这些<code>api</code>根据需要选择使用。</p><h3 id="begin" tabindex="-1"><a class="header-anchor" href="#begin"><span>.begin</span></a></h3><p>在使用任何方法之前都应该先在 <code>setup()</code>中 调用本方法初始化硬件引脚。</p><h4 id="案例代码" tabindex="-1"><a class="header-anchor" href="#案例代码"><span>案例代码</span></a></h4><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre class="language-c"><code><span class="line">ESP_AI esp_ai<span class="token punctuation">;</span>  </span>
<span class="line"><span class="token comment">// [必  填] 是否调试模式， 会输出更多信息</span></span>
<span class="line">bool debug <span class="token operator">=</span> true<span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// [必  填] wifi 配置： { wifi 账号， wifi 密码 }  注意：要用双引号！</span></span>
<span class="line">ESP_AI_wifi_config wifi_config <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;oldwang&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;oldwang520&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// [必  填] 服务配置： { 服务IP， 服务端口 }</span></span>
<span class="line">ESP_AI_server_config server_config <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;192.168.1.5&quot;</span><span class="token punctuation">,</span> <span class="token number">8080</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// [必  填] 离线唤醒方案：{ 方案, 识别阈值 }, &quot;edge_impulse&quot; | &quot;diy&quot;，为 &quot;diy&quot; 时可调用 esp_ai.wakeUp() 方法进行唤醒</span></span>
<span class="line">ESP_AI_wake_up_config wake_up_config <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;edge_impulse&quot;</span><span class="token punctuation">,</span> <span class="token number">0.7</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// [可留空] 麦克风引脚配置：{ bck_io_num, ws_io_num, data_in_num }</span></span>
<span class="line">ESP_AI_i2s_config_mic i2s_config_mic <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// [可留空] 扬声器引脚配置：{ bck_io_num, ws_io_num, data_in_num, 采样率 }</span></span>
<span class="line">ESP_AI_i2s_config_speaker i2s_config_speaker <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">16000</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// [可留空] 音量调节配置：{ 输入引脚，输入最大值(1024|4096)，默认音量(0-1) }</span></span>
<span class="line">ESP_AI_volume_config volume_config <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">4096</span><span class="token punctuation">,</span> <span class="token number">0.5</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">115200</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 开始运行 ESP-AI</span></span>
<span class="line">  esp_ai<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">{</span> i2s_config_mic<span class="token punctuation">,</span> i2s_config_speaker<span class="token punctuation">,</span> wifi_config<span class="token punctuation">,</span> server_config<span class="token punctuation">,</span> wake_up_config<span class="token punctuation">,</span> volume_config<span class="token punctuation">,</span> debug <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数说明" tabindex="-1"><a class="header-anchor" href="#参数说明"><span>参数说明</span></a></h4><table><thead><tr><th>参数名</th><th>是否必填</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>debug</td><td>✔️</td><td>bool</td><td>见案例注释</td></tr><tr><td>wifi_config</td><td>✔️</td><td>ESP_AI_wifi_config</td><td>见案例注释</td></tr><tr><td>server_config</td><td>✔️</td><td>ESP_AI_server_config</td><td>见案例注释</td></tr><tr><td>wake_up_config</td><td>✔️</td><td>ESP_AI_wake_up_config</td><td>见案例注释</td></tr><tr><td>i2s_config_mic</td><td></td><td>ESP_AI_i2s_config_mic</td><td>见案例注释</td></tr><tr><td>i2s_config_speaker</td><td></td><td>ESP_AI_i2s_config_speaker</td><td>见案例注释</td></tr><tr><td>volume_config</td><td></td><td>ESP_AI_volume_config</td><td>见案例注释</td></tr></tbody></table><h3 id="loop" tabindex="-1"><a class="header-anchor" href="#loop"><span>.loop</span></a></h3><p>固定在 <code>loop()</code>中调用，用于处理硬件内部逻辑。一定要放到 <code>loop()</code> 中最顶部。</p><h4 id="案例代码-1" tabindex="-1"><a class="header-anchor" href="#案例代码-1"><span>案例代码</span></a></h4><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre class="language-c"><code><span class="line">ESP_AI esp_ai<span class="token punctuation">;</span>  </span>
<span class="line"></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  esp_ai<span class="token punctuation">.</span><span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数说明-1" tabindex="-1"><a class="header-anchor" href="#参数说明-1"><span>参数说明</span></a></h4><p>无</p><h3 id="wifiisconnected" tabindex="-1"><a class="header-anchor" href="#wifiisconnected"><span>.wifiIsConnected</span></a></h3><p>返回是否连接WiFi</p><h4 id="案例代码-2" tabindex="-1"><a class="header-anchor" href="#案例代码-2"><span>案例代码</span></a></h4><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre class="language-c"><code><span class="line">ESP_AI esp_ai<span class="token punctuation">;</span>  </span>
<span class="line"><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  esp_ai<span class="token punctuation">.</span><span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 连接wifi后会返回 True，必须放到 esp_ai.loop(); 后面</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>esp_ai<span class="token punctuation">.</span><span class="token function">wifiIsConnected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数说明-2" tabindex="-1"><a class="header-anchor" href="#参数说明-2"><span>参数说明</span></a></h4><p>无</p><h3 id="localip" tabindex="-1"><a class="header-anchor" href="#localip"><span>.localIP</span></a></h3><p>返回开发板本地IP，连接WiFi后存在</p><h4 id="案例代码-3" tabindex="-1"><a class="header-anchor" href="#案例代码-3"><span>案例代码</span></a></h4><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre class="language-c"><code><span class="line">Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>esp_ai<span class="token punctuation">.</span><span class="token function">localIP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="参数说明-3" tabindex="-1"><a class="header-anchor" href="#参数说明-3"><span>参数说明</span></a></h4><p>无</p><h3 id="wakeup" tabindex="-1"><a class="header-anchor" href="#wakeup"><span>.wakeUp</span></a></h3><h4 id="案例代码-4" tabindex="-1"><a class="header-anchor" href="#案例代码-4"><span>案例代码</span></a></h4><p>调用这个方法会直接唤醒<code>小明同学</code> 然后进入对话流程。如果使用物理按钮或者第三方语音唤醒板子(比如：天问等)时需要用这个配合唤醒。</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre class="language-c"><code><span class="line">esp_ai<span class="token punctuation">.</span><span class="token function">wakeUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="参数说明-4" tabindex="-1"><a class="header-anchor" href="#参数说明-4"><span>参数说明</span></a></h4><p>设置喇叭音量</p><h3 id="setvolume" tabindex="-1"><a class="header-anchor" href="#setvolume"><span>.setVolume</span></a></h3><h4 id="案例代码-5" tabindex="-1"><a class="header-anchor" href="#案例代码-5"><span>案例代码</span></a></h4><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre class="language-c"><code><span class="line"><span class="token comment">// 设置音量 0-100</span></span>
<span class="line">esp_ai<span class="token punctuation">.</span><span class="token function">setVolume</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数说明-5" tabindex="-1"><a class="header-anchor" href="#参数说明-5"><span>参数说明</span></a></h4><ul><li>类型：int</li><li>范围：0-100</li></ul><h3 id="onevent" tabindex="-1"><a class="header-anchor" href="#onevent"><span>.onEvent</span></a></h3><p>接收到用户的控制指令后的回调，比如用户让<code>开灯</code>或者<code>关灯</code>。你需要在这个回调中进行相应的操作。</p><h4 id="案例代码-6" tabindex="-1"><a class="header-anchor" href="#案例代码-6"><span>案例代码</span></a></h4><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre class="language-c"><code><span class="line"><span class="token keyword">void</span> <span class="token function">on_command</span><span class="token punctuation">(</span>String command_id<span class="token punctuation">,</span> String data<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  Serial<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\n收到指令：%s -- %s\\n&quot;</span><span class="token punctuation">,</span> command_id<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 控制小灯演示</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>command_id <span class="token operator">==</span> <span class="token string">&quot;device_open_001&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;开灯&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>led_pin<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>command_id <span class="token operator">==</span> <span class="token string">&quot;device_close_001&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;关灯&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>led_pin<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">115200</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span>
<span class="line">  esp_ai<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 用户指令监听</span></span>
<span class="line">  esp_ai<span class="token punctuation">.</span><span class="token function">onEvent</span><span class="token punctuation">(</span>on_command<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数说明-6" tabindex="-1"><a class="header-anchor" href="#参数说明-6"><span>参数说明</span></a></h4><p>无</p>`,49),i=[t];function c(l,o){return a(),s("div",null,i)}const d=n(p,[["render",c],["__file","client.html.vue"]]),r=JSON.parse('{"path":"/client.html","title":"客户端","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"基本代码","slug":"基本代码","link":"#基本代码","children":[]},{"level":2,"title":"引脚接线","slug":"引脚接线","link":"#引脚接线","children":[]},{"level":2,"title":"API","slug":"api","link":"#api","children":[{"level":3,"title":".begin","slug":"begin","link":"#begin","children":[]},{"level":3,"title":".loop","slug":"loop","link":"#loop","children":[]},{"level":3,"title":".wifiIsConnected","slug":"wifiisconnected","link":"#wifiisconnected","children":[]},{"level":3,"title":".localIP","slug":"localip","link":"#localip","children":[]},{"level":3,"title":".wakeUp","slug":"wakeup","link":"#wakeup","children":[]},{"level":3,"title":".setVolume","slug":"setvolume","link":"#setvolume","children":[]},{"level":3,"title":".onEvent","slug":"onevent","link":"#onevent","children":[]}]}],"git":{"updatedTime":1721455615000,"contributors":[{"name":"wangzongming","email":"wangzm@bjzxkj.com","commits":2}]},"filePathRelative":"client.md"}');export{d as comp,r as data};
